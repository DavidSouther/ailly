Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    # aws ec2 describe-vpcs --filters Name=is-default,Values=true --query "Vpcs[0].VpcId" # "vpc-1234567890abcdef"
  SGId:
    Type: String
    # aws ec2 describe-security-groups --group-names default --query "SecurityGroups[0].GroupId"
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    # aws ec2 describe-subnets --filters Name=vpc-id,Values="vpc-01234567890abcdef" --query "Subnets[].SubnetId" # "subnet-01234567890abcdef", "subnet-abcdef0123456789"
  InstanceType:
    Type: String
    Default: t3.medium
  ExternalCidr:
    Type: String
    Default: "0.0.0.0/0"
  SSMFailure:
    Type: String
    Default: "empty" # 'static' for static response, any other string for empty response
  SSMHealthCheck:
    Type: String
    Default: "shallow" # 'deep' to perform health checks on downstream resources
  SSMTableName:
    Type: String
    Default: ""
  LaunchTemplateVersion:
    Type: String
    Default: "1.0.0"

Resources:
  # 2. An instance profile and an associated role and policy that grants permission to instances to access DynamoDB and Systems Manager.
  AillyDevInstanceProfileRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: ailly-dev-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: "sts:AssumeRole"

  AillyDevInstanceProfilePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ailly-dev-pol
      Roles:
        - !Ref AillyDevInstanceProfileRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "bedrock:*"
            Resource:
              - "*'"
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource: "arn:aws:iam::*:role/*AmazonBedrock*",
            Condition:
              StringEquals: 
                "iam:PassedToService": [
                  "bedrock.amazonaws.com"
                ]

  AillyDevInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ailly-dev-prof
      Roles:
        - !Ref AillyDevInstanceProfileRole

  # 3. A launch template that specifies the instance profile and a startup script that starts a Python web server on each instance.
  AillyDevKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: ailly-dev-key

  AillyDevDebugSecurityGroupSSHIngress:
    # Add self traffic for ingress, without creating a circular dependency
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SGId
      CidrIp: !Ref ExternalCidr
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22

  AillyDevDebugSecurityGroupHTTPIngress:
    # Add self traffic for ingress, without creating a circular dependency
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SGId
      CidrIp: !Ref ExternalCidr
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80

  AillyDevLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: ailly-dev-template
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: InternalVersion
              Value: !Ref LaunchTemplateVersion # Increment this value & update the stack to trigger a rolling update of the group
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        ImageId: resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
        IamInstanceProfile:
          Name: !Ref AillyDevInstanceProfile
        KeyName: !Ref AillyDevKeyPair
        SecurityGroupIds:
          - !Ref AillyDevDebugSecurityGroup
        MetadataOptions:
          HttpTokens: required
        UserData: !Base64 |
          #!/bin/bash
          yum -y update
          sleep 5 # prevent "Error: Rpmdb changed underneath us"
          yum install git node
          git clone https://github.com/davidsouther/ailly
          cd ailly
          git fetch origin feat/ailly_dev
          npm install
          npx tsc -p core
          npm ln -w web ./core
          npm run -w web dev

  # 4. An Auto Scaling group that starts EC2 instances, one in each of three Availability Zones.
  AillyDevAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 2
        MinInstancesInService: 1
    Properties:
      AutoScalingGroupName: ailly-dev-group
      AvailabilityZones: { "Fn::GetAZs": { "Ref": "AWS::Region" } }
      LaunchTemplate:
        LaunchTemplateId: !Ref AillyDevLaunchTemplate
        Version: !GetAtt AillyDevLaunchTemplate.LatestVersionNumber
      TargetGroupARNs:
        - !Ref AillyDevTargetGroup
      MinSize: 3
      MaxSize: 3

  # 6. A target group that connects the load balancer to instances in the Auto Scaling group.
  AillyDevTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ailly-dev-tg
      Protocol: HTTP
      Port: 80
      HealthCheckPath: /healthcheck
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCId

  # 5. An Application Load Balancer that handles HTTP requests to a single endpoint.
  AillyDevLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ailly-dev-lb
      Subnets: !Ref Subnets

  # 7. A listener that is added to the load balancer and forwards requests to the target group.
  AillyDevListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AillyDevLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AillyDevTargetGroup

  # aws ssm put-parameter --name doc-example-resilient-architecture-health-check --value static --overwrite
  AillyDevParameterFailure:
    Type: AWS::SSM::Parameter
    Properties:
      Name: doc-example-resilient-architecture-failure-response
      Type: String
      Value: !Ref SSMFailure

  # aws ssm put-parameter --name doc-example-resilient-architecture-health-check --value deep --overwrite
  AillyDevParameterHealthCheck:
    Type: AWS::SSM::Parameter
    Properties:
      Name: doc-example-resilient-architecture-health-check
      Type: String
      Value: !Ref SSMHealthCheck

Outputs:
  LB:
    # aws cloudformation describe-stacks --stack-name resilience-demo --query 'Stacks[0].Outputs[?OutputKey==`LB`].OutputValue | [0]' # "ailly-dev-lb-0123456789.us-east-1.elb.amazonaws.com"
    Value: !GetAtt AillyDevLoadBalancer.DNSName
  Key:
    # aws cloudformation describe-stacks --stack-name resilience-demo --query 'Stacks[0].Outputs[?OutputKey==`Key`].OutputValue | [0]' # "key-0123456789"
    # aws ssm get-parameter --name /ec2/keypair/key-0123456789 --with-decryption --query Parameter.Value --output text > ailly-dev-key.pem
    # chmod 400 ailly-dev-key.pem
    Value: !GetAtt AillyDevKeyPair.KeyPairId
  TGArn:
    # aws elbv2 describe-target-health --target-group-arn tg-0123456789
    Value: !Ref AillyDevTargetGroup
